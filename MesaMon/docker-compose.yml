version: '3'
services:
  dirtymail:
    build:
      context: './dirtymail/'
      dockerfile: 'exim4Dockerfile'
    container_name: 'dirtymail'
    ports:
      - 25:25
    restart: always
    networks:
      - default

  picam:
    build:
      context: './picam/'
      dockerfile: Dockerfile
      args:
        - userid=${DCUSERID}
        - groupid=${DCGRPID}
        - vidid=${VIDID}
        - i2cid=${I2CID}
        - spiid=${SPIID}
        - gpioid=${GPIOID}
    image: 'picam'
    ports:
      # This one is only needed if using the streamer which
      #   uses the basic python http server
      - 8675:8675
    container_name: 'picam'
    user: ${DCUSERID}
    devices:
      - /dev/vchiq:/dev/vchiq
      - /dev/vcsm:/dev/vcsm
    volumes:
      - /opt/vc/lib:/opt/vc/lib
      - ${DCDATADIR}/snapper:/home/lig/snaps
      - ${DCDATADIR}/logs/snapper/:/home/lig/logs/
    depends_on:
        - dirtymail
    restart: always
    networks:
      - default

  nginx:
    container_name: nginx
    image: nginx:stable-alpine
    ports:
      - 80:80
    volumes:
      - ${DCDEVDIR}/picam/www:/home/lig/www
      - ${DCDATADIR}/snapper:/home/lig/www/snapshots
#      - ${DCDATADIR}/logs/snapper:/home/lig/snaps/logs/
      - ${DCDEVDIR}/config/nginx.conf:/etc/nginx/nginx.conf
      - ${DCDEVDIR}/config/nginx-app.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - dirtymail
      - picam
    restart: always
    networks:
      - default

  influxdb:
    image: 'influxdb:${INFLUXDB_VERSION}'
    container_name: 'influxdb'
    ports:
      - 8086:8086
      - 8088:8088
    volumes:
      - ${DCDATADIR}/influxdb:/var/lib/influxdb
      - ${DCDATADIR}/logs/influxdb:/var/log/influxdb
      - ${DCDEVDIR}/config/influxdb.conf:/etc/influxdb/influxdb.conf:ro
      - ${DCDEVDIR}/influxbackupdump/:/home/influxbackups/
    networks:
      - default
    user: ${DCUSERID}:${DCGRPID}
    environment:
      - HOME=/tmp/
    restart: always

networks:
  default:
    driver: bridge
